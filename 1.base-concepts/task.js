
//zadacha №1
// Требуется написать программу для решения квадратных уравнений 
// (ax^2+bx+c = 0 ).
// Процесс реализации:
// Активируйте строгий режим.
// Реализуйте функцию solveEquation(), которая принимает 3 аргумента: a, b, c - коэффициенты квадратного уравнения.
// Вычислите дискриминант по формуле b^2-4*a*c. Для возведения в степень используйте оператор - ** или функцию Math.pow().
// Результатом функции должен быть массив.
// Если дискриминант меньше нуля, то корней нет (пустой массив).
// Если дискриминант равен нулю, то корень один. Его необходимо вычислить и вернуть из функции (массив с одним корнем). 
// Формула для вычисления корня: -b/(2*a)
// Если дискриминант больше нуля, то существует 2 решения уравнения. 
// Их необходимо вычислить и вернуть из функции (массив с двумя корнями): (-b + Math.sqrt(d) )/(2*a) 
// и (-b - Math.sqrt(d) )/(2*a).
"use strict"
function solveEquation(a, b, c) {
  let arr = [];
  let d = b ^ 2 - 4 * a * c;
  if (d > 0) {
    console.log(`Дискриминант ${d} > 0, 2 решения уравнения`);
    let x1 = (-b + Math.sqrt(d)) / (2 * a);
    let x2 = (-b - Math.sqrt(d)) / (2 * a);
    arr.push(x1, x2);
  } else if (d === 0) {
    console / log(`Дискриминант ${d} = 0, корень один`);
    let x1 = -b / (2 * a);
    arr.push(x1);
  } else if (d < 0) {
    console.log(`Дискриминант ${d} < 0, корней нет`)
  }
  console.log(arr);
  return arr;
}
solveEquation(-1, 0, 2);


// function calculateTotalMortgage(percent, contribution, amount, date) {
//   let totalAmount;

//   // код для задачи №2 писать здесь

//   return totalAmount;
// }
